% TODO: check for capitalization

@InProceedings{endrullis-10,
  title ={Unique Normal Forms in Infinitary Weakly Orthogonal Rewriting},
  author ={J\"org Endrullis and Clemens Grabmayer and Dimitri Hendriks and Jan Willem Klop and Vincent van Oostrom},
  booktitle ={Proceedings of the 21st International Conference on Rewriting Techniques and Applications},
  pages ={85--102},
  series ={Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN ={978-3-939897-18-7},
  ISSN ={1868-8969},
  year ={2010},
  volume ={6},
  editor ={Christopher Lynch},
  publisher ={Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  address ={Dagstuhl, Germany},
  URL ={http://drops.dagstuhl.de/opus/volltexte/2010/2646},
  doi ={http://dx.doi.org/10.4230/LIPIcs.RTA.2010.85},
  annote ={Keywords: Weakly orthogonal term rewrite systems, unique normal form property, infinitary rewriting, infinitary lambda-beta-eta-calculus, }
}

@article{kennaway-95,
title = {Transfinite Reductions in Orthogonal Term Rewriting Systems},
author = {Richard Kennaway and Jan Willem Klop and Ronan Sleep and Fer-Jan de Vries},
journal = {Information and Computation},
volume = {119},
number = {1},
pages = {18--38},
year = {1995},
issn = {0890-5401},
doi = {DOI: 10.1006/inco.1995.1075},
url = {http://www.sciencedirect.com/science/article/B6WGK-45NJJYB-4W/2/7d48d04a2fe97d6e9e1fc5179f31a488},
}

@incollection{klop-de-vrijer-05,
    title = {Infinitary Normalization},
    author = {Klop, Jan Willem and de Vrijer, Roel},
    booktitle = {We Will Show Them: Essays in Honour of Dov Gabbay},
    editor = {Artemov, S. N. and Barringer, H. and d'Avila Garcez, A. S. and Lamb, L. C. and Woods, J.},
    isbn = {9781904987123},
    pages = {169--192},
    publisher = {College Publications},
    url = {http://www.pubzone.org/pages/publications/showPublication.do?deleteform=true\&\#38;search=venue\&\#38;pos=6\&\#38;publicationId=63384},
    volume = {2},
    year = {2005}
}

@Manual{coq-refman-09,
  title =        {The Coq proof assistant reference manual},
  author =       {\mbox{The Coq development team}},
  organization = {LogiCal Project},
  note =         {Version 8.2},
  year =         {2009},
  url =          "http://coq.inria.fr"
}

@inproceedings{gimenez-94,
  author = {Gim\'enez, Eduardo},
  title = {Codifying Guarded Definitions with Recursive Schemes},
  booktitle = {TYPES},
  year = {1994},
  pages = {39--59}
}

% TODO: check from here on

@book{terese-03,
    author = {Terese},
    citeulike-article-id = {6110018},
    editor = {Bezem, Marc and Klop, Jan Willem and de Vrijer, Roel},
    keywords = {infinitary-rewriting, lambda-calculus, master-project, normalization, redexes, rewriting, rpo, substitution, termination},
    posted-at = {2009-11-13 16:51:56},
    priority = {2},
    series = {Cambridge Tracts in Theoretical Computer Science},
    title = {Term Rewriting Systems},
    volume = {55},
    year = {2003}
}

% TODO: sorting value for 'de kleijn'

@inproceedings{de-kleijn-koprowski-van-raamsdonk-04,
    address = {Nijmegen, The Netherlands},
    author = {de Kleijn, Nicole and Koprowski, Adam and van Raamsdonk, Femke},
    booktitle = {Dutch Proof Tools Day 2004},
    citeulike-article-id = {5856292},
    keywords = {coq, master-project, rewriting, rpo, termination, theorem-proving},
    month = {July},
    organization = {University of Nijmegen},
    posted-at = {2009-09-30 00:30:32},
    priority = {2},
    title = {Well-foundedness of the recursive path ordering in Coq},
    year = {2004}
}

@mastersthesis{de-kleijn-03,
    address = {Amsterdam},
    author = {de Kleijn, Nicole},
    citeulike-article-id = {5856265},
    keywords = {coq, master-project, rewriting, rpo, termination, theorem-proving},
    month = {August},
    posted-at = {2009-09-30 00:24:50},
    priority = {2},
    school = {Vrije Universiteit},
    title = {Well-foundedness of RPO in Coq},
    year = {2003}
}

@unpublished{gimenez-casteran-07,
    author = {Gim\'{e}nez, Eduardo and Cast\'{e}ran, Pierre},
    citeulike-article-id = {5856239},
    keywords = {coinduction, coq, functional-programming, master-project, types},
    posted-at = {2009-09-30 00:01:17},
    priority = {2},
    title = {A Tutorial on [Co-]Inductive Types in Coq},
    year = {2007}
}

@techreport{gimenez-98,
    abstract = {This document is an introduction to the definition and use of recursive types in the Coq proof environment. It explains how recursive types like natural numbers and infinite streams are defined in Coq, and the kind of proof techniques that can be used to reason about them (case analysis, induction, inversion of predicates, co-induction, etc). Each technique is illustrated through an executable and self-contained Coq script.},
    author = {Gim\'{e}nez, Eduardo},
    citeulike-article-id = {6074215},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.41.7439},
    journal = {INRIA ROCQUENCOURT},
    keywords = {coinduction, coq, functional-programming, logic, master-project, recursion, types},
    posted-at = {2009-11-05 13:34:58},
    priority = {2},
    title = {A Tutorial on Recursive Types in Coq},
    url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.41.7439},
    year = {1998}
}

@incollection{gimenez-95,
    abstract = {We describe an experience concerning the implementation and use of co-inductive types in the proof editor Coq. Co-inductive types are recursive types which, opposite to inductive ones, may be inhabited by infinite objects. In order to illustrate their use in Coq, we describe an axiomatisation of a calculus of broadcasting systems where non-ending processes are represented using infinite objects. This calculus is then used for developing a verification proof of the alternating bit protocol.},
    author = {Gim\'{e}nez, Eduardo},
    citeulike-article-id = {6074528},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/3-540-61780-9_67},
    citeulike-linkout-1 = {http://www.springerlink.com/content/p24mk844489l6315},
    doi = {10.1007/3-540-61780-9_67},
    journal = {Types for Proofs and Programs},
    keywords = {coinduction, coq, functional-programming, logic, master-project, recursion, theorem-proving, verification},
    pages = {135--152},
    posted-at = {2009-11-05 14:02:51},
    priority = {2},
    title = {An application of co-inductive types in Coq: Verification of the alternating bit protocol},
    url = {http://dx.doi.org/10.1007/3-540-61780-9_67},
    year = {1996}
}
