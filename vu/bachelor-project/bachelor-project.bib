@INPROCEEDINGS{Dargaye-Leroy-07,
  AUTHOR = {Z. Dargaye and X. Leroy},
  TITLE = {Mechanized verification of {CPS} transformations},
  BOOKTITLE = {14th International Conference on Logic for Programming,
                     Artificial Intelligence and Reasoning (LPAR 2007)},
  YEAR = 2007,
  SERIES = {Lecture Notes in Artificial Intelligence},
  PUBLISHER = {Springer},
  URL = {http://gallium.inria.fr/~xleroy/publi/cps-dargaye-leroy.pdf},
  XTOPIC = {compcert},
  ABSTRACT = {
Transformation to continuation-passing style (CPS) is often performed
by optimizing compilers for functional programming languages.  As part
of the development and proof of correctness of a compiler for the
mini-ML functional language, we have mechanically verified the
correctness of two CPS transformations for a call-by-value
$\lambda$-calculus with $n$-ary functions, recursive functions, data
types and pattern-matching.  The transformations generalize Plotkin's
original call-by-value transformation and Danvy and Nielsen's
optimized transformation, respectively.  We used the Coq proof
assistant to formalize the transformations and conduct and check the
proofs.  Originalities of this work include the use of big-step
operational semantics to avoid difficulties with administrative
redexes, and of two-sorted de Bruijn indices to avoid difficulties
with $\alpha$-conversion.}
}

@article{Danvy-Nielsen-03,
 author = {O. Danvy and L. R. Nielsen},
 title = {A first-order one-pass {CPS} transformation},
 journal = {Theoretical Computer Science},
 volume = {308},
 number = {1-3},
 year = {2003},
 issn = {0304-3975},
 pages = {239--257},
 doi = {http://dx.doi.org/10.1016/S0304-3975(02)00733-8},
 publisher = {Elsevier Science Publishers Ltd.},
 address = {Essex, UK},
}

@article{Plotkin-75,
  author    = {G. D. Plotkin},
  title     = {Call-by-Name, Call-by-Value and the lambda-Calculus},
  journal   = {Theoretical Computer Science},
  volume    = {1},
  number    = {2},
  year      = {1975},
  pages     = {125-159},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@book{Appel-92,
 author = {A. W. Appel},
 title = {Compiling with Continuations},
 publisher = {Cambridge University Press},
 year = 1992
}

@inproceedings{Orbit-86,
  author    = {D. A. Kranz and
               R. Kelsey and
               J. Rees and
               P. Hudak and
               J. Philbin},
  title     = {{ORBIT}: an optimizing compiler for {Scheme}},
  booktitle = {SIGPLAN Symposium on Compiler Construction},
  year      = {1986},
  pages     = {219-233},
  ee        = {http://doi.acm.org/10.1145/12276.13333},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}


@article{Danvy-Filinski-92,
    author = "O. Danvy and A. Filinski",
    title = "Representing Control: {A} study of the {CPS} transformation",
    journal = "Mathematical Structures in Computer Science",
    volume = "2",
    number = "4",
    pages = "361--391",
    year = "1992",
    url = "citeseer.ist.psu.edu/article/danvy92representing.html"
}

@inproceedings{Translation-Validation-98,
 author = {A. Pnueli and M. Siegel and E. Singerman},
 title = {Translation Validation},
 booktitle = {Proceedings of the 4th International Conference on Tools and Algorithms for Construction and Analysis of Systems},
 year = {1998},
 isbn = {3-540-64356-7},
 pages = {151--166},
 publisher = {Springer-Verlag},
 address = {London, UK},
}

@article{Necula-00,
    author = "G. C. Necula",
    title = "Translation validation for an optimizing compiler",
    journal = "ACM SIG{\-}PLAN Notices",
    volume = "35",
    number = "5",
    pages = "83--94",
    year = "2000",
    url = "citeseer.ist.psu.edu/necula00translation.html"
}

@misc{Coq-89,
  title =        {The {Coq} proof assistant},
  author =       {Coq development team},
  organization = {LogiCal Project},
  note =         {Software and documentation available at {\href{http://coq.inria.fr/}{\texttt{http://coq.inria.fr/}}}},
  year =         {1989-2008},
  url =          "http://coq.inria.fr"
}

@book{CoqArt-04,
  author       = "Y. Bertot and P. Cast\'eran",
  title        = "Interactive Theorem Proving and Program Development. Coq'Art: The Calculus of Inductive Constructions",
  series       = "Texts in Theoretical Computer Science",
  year         = "2004",
  publisher    = "Springer Verlag",
  url          = "http://www.labri.fr/publications/l3a/2004/BC04"
}

@InProceedings{Letouzey-02,
  author =       {Pierre Letouzey},
  title =        {A New Extraction for {Coq}},
  booktitle =    {{Types for Proofs and Programs, Workshop TYPES 2002}},
  publisher =    {Springer-Verlag},
  series =       {Lecture Notes in Computer Science},
  volume =       2646,
  year =         2003,
  pages =        {200-219},
}

@inproceedings{poplmark-challenge-05,
	abstract = {How close are we to a world where every paper on programming languages is accompanied by an electronic appendix with 
machine-checked proofs? We propose a concrete set of benchmarks for measuring progress in this area. Based on the metatheory of System F-sub, a typed 
lambda-calculus with second-order polymorphism, subtyping, and records, these benchmarks embody many aspects of programming languages that are 
challenging to formalize: variable binding at both the term and type levels, syntactic forms with variable numbers of components (including binders), 
and proofs demanding complex induction principles. We hope that these benchmarks will help clarify the current state of the art, provide a basis for 
comparing competing technologies, and motivate further research.},
	author = {Aydemir, Brian  E.  and Bohannon, Aaron   and Fairbairn, Matthew   and Foster, Nathan  J.  and Pierce, Benjamin  C.  and Sewell, 
Peter   and Vytiniotis, Dimitrios   and Washburn, Geoffrey   and Weirich, Stephanie   and Zdancewic, Steve  },
	booktitle = {International Conference on Theorem Proving in Higher Order Logics (TPHOLs)},
	pdf = {http://www.cis.upenn.edu/~geoffw/research/papers/poplmark.pdf},
	title = {Mechanized metatheory for the masses: {T}he {POPLmark} Challenge},
	url = {http://www.cis.upenn.edu/~geoffw/research/papers/poplmark.pdf},
	year = {2005}
}
